# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: esp_command_map.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='esp_command_map.proto',
  package='esp_command_map',
  serialized_pb=_b('\n\x15\x65sp_command_map.proto\x12\x0f\x65sp_command_map\"\x81\x07\n\x05\x41tMap\x12\x13\n\x0bgeneric_trm\x18\x01 \x02(\t\x12\x12\n\nat_command\x18\x02 \x02(\t\x12\x33\n\rat_parameters\x18\x03 \x01(\x0b\x32\x1c.esp_command_map.AtMap.Value\x1a\x99\x06\n\x05Value\x12\n\n\x02ip\x18\x01 \x01(\t\x12-\n\x03mux\x18\x02 \x01(\x0e\x32 .esp_command_map.AtMap.Value.Mux\x12@\n\x0f\x63onnection_mode\x18\x03 \x01(\x0e\x32\'.esp_command_map.AtMap.Value.Connection\x12:\n\nconnect_ap\x18\x04 \x01(\x0b\x32&.esp_command_map.AtMap.Value.ConnectAp\x12\x38\n\tconfig_ap\x18\x05 \x01(\x0b\x32%.esp_command_map.AtMap.Value.ConfigAp\x12\x38\n\tdhcp_mode\x18\x06 \x01(\x0b\x32%.esp_command_map.AtMap.Value.DhcpMode\x1a\x35\n\tConnectAp\x12\x0c\n\x04ssid\x18\x01 \x02(\t\x12\x0b\n\x03pwd\x18\x02 \x01(\t\x12\r\n\x05\x62ssid\x18\x03 \x01(\t\x1a\xaf\x01\n\x08\x43onfigAp\x12\x0c\n\x04ssid\x18\x01 \x02(\t\x12\x0b\n\x03pwd\x18\x02 \x01(\t\x12\x12\n\nchannel_id\x18\x03 \x01(\x05\x12\x36\n\x03\x65\x63n\x18\x04 \x01(\x0e\x32).esp_command_map.AtMap.Value.ConfigAp.Ecn\"<\n\x03\x45\x63n\x12\x08\n\x04OPEN\x10\x00\x12\x0b\n\x07WPA_PSK\x10\x01\x12\x0c\n\x08WPA2_PSK\x10\x02\x12\x10\n\x0cWPA_WPA2_PSK\x10\x03\x1a\x96\x01\n\x08\x44hcpMode\x12\x35\n\x04mode\x18\x01 \x02(\x0e\x32\'.esp_command_map.AtMap.Value.Connection\x12\x34\n\x02\x65n\x18\x02 \x02(\x0e\x32(.esp_command_map.AtMap.Value.DhcpMode.En\"\x1d\n\x02\x45n\x12\x0b\n\x07\x44ISABLE\x10\x00\x12\n\n\x06\x45NABLE\x10\x01\"$\n\x03Mux\x12\n\n\x06SINGLE\x10\x00\x12\x11\n\rMULTI_CHANNEL\x10\x01\";\n\nConnection\x12\x0b\n\x07STATION\x10\x01\x12\x10\n\x0c\x41\x43\x43\x45SS_POINT\x10\x02\x12\x0e\n\nSTATION_AP\x10\x03')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_ATMAP_VALUE_CONFIGAP_ECN = _descriptor.EnumDescriptor(
  name='Ecn',
  full_name='esp_command_map.AtMap.Value.ConfigAp.Ecn',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPEN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WPA_PSK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WPA2_PSK', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WPA_WPA2_PSK', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=628,
  serialized_end=688,
)
_sym_db.RegisterEnumDescriptor(_ATMAP_VALUE_CONFIGAP_ECN)

_ATMAP_VALUE_DHCPMODE_EN = _descriptor.EnumDescriptor(
  name='En',
  full_name='esp_command_map.AtMap.Value.DhcpMode.En',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DISABLE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENABLE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=812,
  serialized_end=841,
)
_sym_db.RegisterEnumDescriptor(_ATMAP_VALUE_DHCPMODE_EN)

_ATMAP_VALUE_MUX = _descriptor.EnumDescriptor(
  name='Mux',
  full_name='esp_command_map.AtMap.Value.Mux',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SINGLE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTI_CHANNEL', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=843,
  serialized_end=879,
)
_sym_db.RegisterEnumDescriptor(_ATMAP_VALUE_MUX)

_ATMAP_VALUE_CONNECTION = _descriptor.EnumDescriptor(
  name='Connection',
  full_name='esp_command_map.AtMap.Value.Connection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATION', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACCESS_POINT', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATION_AP', index=2, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=881,
  serialized_end=940,
)
_sym_db.RegisterEnumDescriptor(_ATMAP_VALUE_CONNECTION)


_ATMAP_VALUE_CONNECTAP = _descriptor.Descriptor(
  name='ConnectAp',
  full_name='esp_command_map.AtMap.Value.ConnectAp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ssid', full_name='esp_command_map.AtMap.Value.ConnectAp.ssid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pwd', full_name='esp_command_map.AtMap.Value.ConnectAp.pwd', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bssid', full_name='esp_command_map.AtMap.Value.ConnectAp.bssid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=457,
  serialized_end=510,
)

_ATMAP_VALUE_CONFIGAP = _descriptor.Descriptor(
  name='ConfigAp',
  full_name='esp_command_map.AtMap.Value.ConfigAp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ssid', full_name='esp_command_map.AtMap.Value.ConfigAp.ssid', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pwd', full_name='esp_command_map.AtMap.Value.ConfigAp.pwd', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='esp_command_map.AtMap.Value.ConfigAp.channel_id', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ecn', full_name='esp_command_map.AtMap.Value.ConfigAp.ecn', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ATMAP_VALUE_CONFIGAP_ECN,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=513,
  serialized_end=688,
)

_ATMAP_VALUE_DHCPMODE = _descriptor.Descriptor(
  name='DhcpMode',
  full_name='esp_command_map.AtMap.Value.DhcpMode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='esp_command_map.AtMap.Value.DhcpMode.mode', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='en', full_name='esp_command_map.AtMap.Value.DhcpMode.en', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ATMAP_VALUE_DHCPMODE_EN,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=691,
  serialized_end=841,
)

_ATMAP_VALUE = _descriptor.Descriptor(
  name='Value',
  full_name='esp_command_map.AtMap.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='esp_command_map.AtMap.Value.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mux', full_name='esp_command_map.AtMap.Value.mux', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connection_mode', full_name='esp_command_map.AtMap.Value.connection_mode', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connect_ap', full_name='esp_command_map.AtMap.Value.connect_ap', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config_ap', full_name='esp_command_map.AtMap.Value.config_ap', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dhcp_mode', full_name='esp_command_map.AtMap.Value.dhcp_mode', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ATMAP_VALUE_CONNECTAP, _ATMAP_VALUE_CONFIGAP, _ATMAP_VALUE_DHCPMODE, ],
  enum_types=[
    _ATMAP_VALUE_MUX,
    _ATMAP_VALUE_CONNECTION,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=940,
)

_ATMAP = _descriptor.Descriptor(
  name='AtMap',
  full_name='esp_command_map.AtMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='generic_trm', full_name='esp_command_map.AtMap.generic_trm', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='at_command', full_name='esp_command_map.AtMap.at_command', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='at_parameters', full_name='esp_command_map.AtMap.at_parameters', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ATMAP_VALUE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=940,
)

_ATMAP_VALUE_CONNECTAP.containing_type = _ATMAP_VALUE
_ATMAP_VALUE_CONFIGAP.fields_by_name['ecn'].enum_type = _ATMAP_VALUE_CONFIGAP_ECN
_ATMAP_VALUE_CONFIGAP.containing_type = _ATMAP_VALUE
_ATMAP_VALUE_CONFIGAP_ECN.containing_type = _ATMAP_VALUE_CONFIGAP
_ATMAP_VALUE_DHCPMODE.fields_by_name['mode'].enum_type = _ATMAP_VALUE_CONNECTION
_ATMAP_VALUE_DHCPMODE.fields_by_name['en'].enum_type = _ATMAP_VALUE_DHCPMODE_EN
_ATMAP_VALUE_DHCPMODE.containing_type = _ATMAP_VALUE
_ATMAP_VALUE_DHCPMODE_EN.containing_type = _ATMAP_VALUE_DHCPMODE
_ATMAP_VALUE.fields_by_name['mux'].enum_type = _ATMAP_VALUE_MUX
_ATMAP_VALUE.fields_by_name['connection_mode'].enum_type = _ATMAP_VALUE_CONNECTION
_ATMAP_VALUE.fields_by_name['connect_ap'].message_type = _ATMAP_VALUE_CONNECTAP
_ATMAP_VALUE.fields_by_name['config_ap'].message_type = _ATMAP_VALUE_CONFIGAP
_ATMAP_VALUE.fields_by_name['dhcp_mode'].message_type = _ATMAP_VALUE_DHCPMODE
_ATMAP_VALUE.containing_type = _ATMAP
_ATMAP_VALUE_MUX.containing_type = _ATMAP_VALUE
_ATMAP_VALUE_CONNECTION.containing_type = _ATMAP_VALUE
_ATMAP.fields_by_name['at_parameters'].message_type = _ATMAP_VALUE
DESCRIPTOR.message_types_by_name['AtMap'] = _ATMAP

AtMap = _reflection.GeneratedProtocolMessageType('AtMap', (_message.Message,), dict(

  Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), dict(

    ConnectAp = _reflection.GeneratedProtocolMessageType('ConnectAp', (_message.Message,), dict(
      DESCRIPTOR = _ATMAP_VALUE_CONNECTAP,
      __module__ = 'esp_command_map_pb2'
      # @@protoc_insertion_point(class_scope:esp_command_map.AtMap.Value.ConnectAp)
      ))
    ,

    ConfigAp = _reflection.GeneratedProtocolMessageType('ConfigAp', (_message.Message,), dict(
      DESCRIPTOR = _ATMAP_VALUE_CONFIGAP,
      __module__ = 'esp_command_map_pb2'
      # @@protoc_insertion_point(class_scope:esp_command_map.AtMap.Value.ConfigAp)
      ))
    ,

    DhcpMode = _reflection.GeneratedProtocolMessageType('DhcpMode', (_message.Message,), dict(
      DESCRIPTOR = _ATMAP_VALUE_DHCPMODE,
      __module__ = 'esp_command_map_pb2'
      # @@protoc_insertion_point(class_scope:esp_command_map.AtMap.Value.DhcpMode)
      ))
    ,
    DESCRIPTOR = _ATMAP_VALUE,
    __module__ = 'esp_command_map_pb2'
    # @@protoc_insertion_point(class_scope:esp_command_map.AtMap.Value)
    ))
  ,
  DESCRIPTOR = _ATMAP,
  __module__ = 'esp_command_map_pb2'
  # @@protoc_insertion_point(class_scope:esp_command_map.AtMap)
  ))
_sym_db.RegisterMessage(AtMap)
_sym_db.RegisterMessage(AtMap.Value)
_sym_db.RegisterMessage(AtMap.Value.ConnectAp)
_sym_db.RegisterMessage(AtMap.Value.ConfigAp)
_sym_db.RegisterMessage(AtMap.Value.DhcpMode)


# @@protoc_insertion_point(module_scope)
